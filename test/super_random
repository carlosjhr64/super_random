#! ruby
require 'test/unit'
require 'super_random'

class TestSuperRandom < Test::Unit::TestCase
  def test_001_quik
    super_random = SuperRandom.new

    bytes = super_random.bytes
    assert_equal 32, bytes.length, 'Default number of  bytes:'
    assert_equal 3, super_random.services, 'Number of services:'
    # 2.5 = 1 + 1 + (0.5=16/32)
    assert_equal 2.5, super_random.randomness, 'Measure of "hyper" radomness:'

    bytes = super_random.bytes(16)
    assert_equal 16, bytes.length, 'Default number of  bytes:'
    assert_equal 3, super_random.services, 'Number of services:'
    assert_equal 3.0, super_random.randomness, 'Measure of "hyper" radomness:'

    bytes = super_random.bytes(256)
    assert_equal 256, bytes.length, 'Default number of  bytes:'
    assert_equal 3, super_random.services, 'Number of services:'
    # 1.5625 = 1 + (0.5=128/256) + (0.0625=16/256)
    assert_equal 1.5625, super_random.randomness, 'Measure of "hyper" radomness:'
  end
end
